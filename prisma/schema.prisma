// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Player {
  id        Int      @id @default(autoincrement())
  name      String
  salary    Float
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    Int
  image     String  //TODO: view for the type of image and how to store it
}

model Team {
  id        Int      @id @default(autoincrement())
  name      String
  players   Player[]
}

enum Role {
  USER
  ADMIN
}

model Account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  name     String
  role     Role   @default(USER) 
  isVerified  Boolean  @default(false)//TODO: view for email verification with library
  createdAt DateTime @default(now())
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}